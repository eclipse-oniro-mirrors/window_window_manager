# Copyright (c) 2025 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/test.gni")
import("//foundation/window/window_manager/windowmanager_aafwk.gni")

module_out_path = "window_manager/window_manager/window_scene/animation"
ws_unittest_common = "../:ws_unittest_common"

ohos_unittest("ws_window_session_property_animation_test") {
  module_out_path = module_out_path

  sources = [ "window_session_property_animation_test.cpp" ]

  deps = [ ws_unittest_common ]

  external_deps = [
    "c_utils:utils",
    "googletest:gmock",
    "googletest:gtest",
    "googletest:gtest_main",
    "graphic_2d:librender_service_client",
    "image_framework:image_native",
    "input:libmmi-client",
    "input:libmmi-napi",
  ]
}

ohos_unittest("ws_session_proxy_animation_test") {
  module_out_path = module_out_path

  include_dirs = [
    "${window_base_path}/window_scene/session/host/include/zidl",
    "${window_base_path}/window_scene/test/mock",
  ]
  sources = [ "session_proxy_animation_test.cpp" ]

  deps = [ ws_unittest_common ]

  external_deps = [
    "bundle_framework:appexecfwk_base",
    "c_utils:utils",
    "googletest:gmock",
    "googletest:gtest",
    "googletest:gtest_main",
    "graphic_2d:librender_service_client",
    "image_framework:image_native",
    "input:libmmi-client",
    "input:libmmi-napi",
  ]
}

ohos_unittest("ws_scene_session_animation_test") {
  module_out_path = module_out_path

  sources = [ "scene_session_animation_test.cpp" ]

  cflags_cc = [ "-Wno-thread-safety" ]

  deps = [ ws_unittest_common ]

  external_deps = [
    "ability_base:session_info",
    "ability_runtime:app_context",
    "bundle_framework:appexecfwk_core",
    "c_utils:utils",
    "googletest:gmock",
    "googletest:gtest",
    "googletest:gtest_main",
    "graphic_2d:librender_service_client",
    "hilog:libhilog",
    "image_framework:image_native",
    "input:libmmi-client",
    "input:libmmi-napi",
  ]
}

ohos_unittest("ws_ui_effect_controller_test") {
  module_out_path = module_out_path

  include_dirs = [
    "${window_base_path}/window_scene/session/host/include",
    "${window_base_path}/utils/include",
  ]

  sources = [ 
    "ui_effect_controller_test.cpp",
    "${window_base_path}/window_scene/test/mock/mock_accesstoken_kit.cpp",
  ]

  cflags_cc = [ "-Wno-thread-safety" ]

  deps = [ ws_unittest_common ]

  external_deps = [
    "ability_base:session_info",
    "ability_runtime:app_context",
    "ability_runtime:runtime",
    "access_token:libaccesstoken_sdk",
    "access_token:libtokenid_sdk",
    "napi:ace_napi",
    "c_utils:utils",
    "ipc:ipc_single",
    "googletest:gmock",
    "googletest:gtest",
    "googletest:gtest_main",
    "graphic_2d:librender_service_client",
    "hilog:libhilog",
    "image_framework:image_native",
  ]
}

ohos_unittest("ws_ui_effect_controller_proxy_test") {
  module_out_path = module_out_path

  include_dirs = [
    "${window_base_path}/window_scene/session/host/include",
    "${window_base_path}/utils/include",
  ]

  sources = [ 
    "ui_effect_controller_proxy_test.cpp",
    "../../mock/mock_message_parcel.cpp",
  ]

  cflags_cc = [ "-Wno-thread-safety" ]

  deps = [ ws_unittest_common ]

  external_deps = [
    "ability_base:session_info",
    "ability_runtime:app_context",
    "ability_runtime:runtime",
    "napi:ace_napi",
    "c_utils:utils",
    "googletest:gmock",
    "googletest:gtest",
    "googletest:gtest_main",
    "graphic_2d:librender_service_client",
    "hilog:libhilog",
    "image_framework:image_native",
  ]
}

ohos_unittest("ws_ui_effect_controller_stub_test") {
  module_out_path = module_out_path

  include_dirs = [
    "${window_base_path}/window_scene/session/host/include",
    "${window_base_path}/utils/include",
  ]

  sources = [ 
    "ui_effect_controller_stub_test.cpp",
  ]

  cflags_cc = [ "-Wno-thread-safety" ]

  deps = [ ws_unittest_common ]

  external_deps = [
    "ability_base:session_info",
    "ability_runtime:app_context",
    "ability_runtime:runtime",
    "napi:ace_napi",
    "c_utils:utils",
    "googletest:gmock",
    "googletest:gtest",
    "googletest:gtest_main",
    "graphic_2d:librender_service_client",
    "hilog:libhilog",
    "image_framework:image_native",
  ]
}