# Copyright (c) 2023-2025 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/test.gni")
import("../../../windowmanager_aafwk.gni")
module_out_path = "window_manager/window_manager/window_scene"

group("unittest") {
  testonly = true

  deps = [
    ":ws_ability_info_manager_test",
    ":ws_anomaly_detection_test",
    ":ws_compatible_mode_property_test",
    ":ws_dfx_hisysevent_test",
    ":ws_distributed_client_test",
    ":ws_ffrt_helper_test",
    ":ws_main_session_lifecycle_test",
    ":ws_move_drag_controller_test",
    ":ws_multi_instance_manager_test",
    ":ws_root_scene_session_test",
    ":ws_scb_system_session_test",
    ":ws_scene_board_judgement_test",
    ":ws_scene_persistence_test",
    ":ws_scene_persistent_storage_test",
    ":ws_scene_screen_change_listener_test",
    ":ws_scene_session_converter_test",
    ":ws_scene_session_manager_lifecycle_test2",
    ":ws_scene_session_manager_lite_test",
    ":ws_scene_session_manager_proxy_lifecycle_test",
    ":ws_scene_session_manager_stub_lifecycle_test",
    ":ws_scene_session_manager_stub_test",
    ":ws_scene_session_manager_supplement_test",
    ":ws_scene_system_ability_listener_test",
    ":ws_session_change_recorder_test",
    ":ws_session_coordinate_helper_test",
    ":ws_session_helper_test",
    ":ws_session_manager_agent_controller_test",
    ":ws_session_manager_service_recover_proxy_test",
    ":ws_session_permission_test",
    ":ws_session_proxy_immersive_test",
    ":ws_session_proxy_lifecycle_test",
    ":ws_session_proxy_mock_test",
    ":ws_session_specific_window_test",
    ":ws_session_stage_proxy_lifecycle_test",
    ":ws_session_stage_proxy_test",
    ":ws_session_stage_stub_lifecycle_test",
    ":ws_session_stage_stub_test",
    ":ws_session_stub_mock_test",
    ":ws_session_stub_property_test",
    ":ws_session_utils_test",
    ":ws_ssmgr_specific_window_test",
    ":ws_sub_session_lifecycle_test",
    ":ws_system_session_lifecycle_test",
    ":ws_task_scheduler_test",
    ":ws_window_event_channel_proxy_mock_test",
    ":ws_window_event_channel_proxy_test",
    ":ws_window_event_channel_stub_mock_test",
    ":ws_window_event_channel_stub_test",
    ":ws_window_event_channel_test",
    ":ws_window_manager_lru_test",
    ":ws_window_manager_service_dump_test",
    ":ws_window_scene_config_test",
    ":pip_change_listener_proxy_test",
    ":pip_change_listener_stub_test",
    "animation:ws_scene_session_animation_test",
    "animation:ws_session_proxy_animation_test",
    "animation:ws_ui_effect_controller_proxy_test",
    "animation:ws_ui_effect_controller_stub_test",
    "animation:ws_ui_effect_controller_test",
    "animation:ws_window_session_property_animation_test",
    "event_distribution:ws_intention_event_manager_test",
    "event_distribution:ws_scene_input_manager_test",
    "event_distribution:ws_scene_session_dirty_manager_test2",
    "rotation:ws_scene_session_manager_rotation_test",
    "rotation:ws_scene_session_rotation_test",
    "rotation:ws_session_stage_proxy_rotation_test",
    "rotation:ws_session_stage_stub_rotation_test",
    "rotation:ws_window_session_property_rotation_test",
    "ui_extension:unittest",
    "window_focus:unittest",
    "window_pattern:window_pattern_starting_window_rdb_test",
    "window_recover:ws_window_recover_session_test",
  ]

  if (window_manager_use_sceneboard) {
    deps += [
      ":ws_hidumper_controller_test",
      ":ws_keyboard_session_test",
      ":ws_main_session_test",
      ":ws_mock_session_manager_service_test",
      ":ws_pc_fold_screen_controller_test",
      ":ws_scene_session_lifecycle_test",
      ":ws_scene_session_manager_kiosk_test",
      ":ws_scene_session_manager_lifecycle_test",
      ":ws_scene_session_manager_lite_stub_test",
      ":ws_scene_session_manager_one_test",
      ":ws_scene_session_manager_proxy_test",
      ":ws_scene_session_manager_stub_test2",
      ":ws_scene_session_manager_test",
      ":ws_scene_session_manager_two_test",
      ":ws_scene_session_test",
      ":ws_session_lifecycle_test",
      ":ws_session_listener_controller_test",
      ":ws_session_manager_lite_test",
      ":ws_session_manager_test",
      ":ws_session_proxy_property_test",
      ":ws_session_proxy_test",
      ":ws_session_stub_immersive_test",
      ":ws_session_stub_lifecycle_test",
      ":ws_session_stub_test",
      ":ws_session_test",
      ":ws_sub_session_test",
      ":ws_system_session_test",
      ":ws_window_session_property_test",
      "event_distribution:ws_scene_session_dirty_manager_test",
      "layout:ws_layout_test",
      "multi_user:unittest",
      "window_pattern:window_pattern_snapshot_test",
      "window_pattern:window_pattern_starting_window_test",
    ]
  } else {
    deps += [
      ":ws_session_manager_lite_ut_test",
      ":ws_session_manager_ut_test",
    ]
  }
}

test_external_deps = [
  "ability_base:configuration",
  "ability_runtime:ability_manager",
  "ability_runtime:app_manager",
  "ability_runtime:session_handler",
  "access_token:libaccesstoken_sdk",
  "accessibility:accessibility_common",
  "accessibility:accessibility_interface",
  "bundle_framework:libappexecfwk_common",
  "c_utils:utils",
  "ffrt:libffrt",
  "googletest:gmock",
  "googletest:gtest",
  "googletest:gtest_main",
  "graphic_2d:librender_service_base",
  "graphic_2d:librender_service_client",
  "graphic_2d:window_animation",
  "hilog:libhilog",
  "image_framework:image_native",
  "input:libmmi-client",
  "input:libmmi-napi",
  "ipc:ipc_single",
  "libxml2:libxml2",
  "napi:ace_napi",
  "safwk:system_ability_fwk",
]

ohos_unittest("ws_ability_info_manager_test") {
  module_out_path = module_out_path

  sources = [ "ability_info_manager_test.cpp" ]

  deps = [ ":ws_unittest_common" ]

  external_deps = [
    "ability_base:configuration",
    "ability_base:session_info",
    "ability_runtime:ability_context_native",
    "bundle_framework:appexecfwk_base",
    "bundle_framework:appexecfwk_core",
    "bundle_framework:libappexecfwk_common",
    "hilog:libhilog",
  ]
}

ohos_unittest("ws_anomaly_detection_test") {
  module_out_path = module_out_path

  sources = [ "anomaly_detection_test.cpp" ]

  deps = [ ":ws_unittest_common" ]

  external_deps = test_external_deps
  external_deps += [
    "ability_base:session_info",
    "ability_runtime:ability_context_native",
    "ability_runtime:mission_info",
  ]
}

ohos_unittest("ws_system_session_test") {
  module_out_path = module_out_path

  sources = [
    "${window_base_path}/window_scene/test/mock/mock_accesstoken_kit.cpp",
    "system_session_test.cpp",
  ]

  deps = [ ":ws_unittest_common" ]

  external_deps = test_external_deps
}

ohos_unittest("ws_session_helper_test") {
  module_out_path = module_out_path

  sources = [ "session_helper_test.cpp" ]

  deps = [ ":ws_unittest_common" ]

  external_deps = test_external_deps
}

ohos_unittest("ws_system_session_lifecycle_test") {
  module_out_path = module_out_path

  sources = [ "system_session_lifecycle_test.cpp" ]

  deps = [ ":ws_unittest_common" ]

  external_deps = test_external_deps
}

ohos_unittest("ws_main_session_test") {
  module_out_path = module_out_path

  sources = [ "main_session_test.cpp" ]

  deps = [ ":ws_unittest_common" ]

  external_deps = test_external_deps
}

ohos_unittest("ws_main_session_lifecycle_test") {
  module_out_path = module_out_path

  sources = [ "main_session_lifecycle_test.cpp" ]

  deps = [ ":ws_unittest_common" ]

  external_deps = test_external_deps
}

ohos_unittest("ws_scb_system_session_test") {
  module_out_path = module_out_path

  sources = [ "scb_system_session_test.cpp" ]

  deps = [ ":ws_unittest_common" ]

  external_deps = test_external_deps
}

ohos_unittest("ws_sub_session_test") {
  module_out_path = module_out_path

  include_dirs = [ "${window_base_path}/window_scene/test/mock" ]

  defines = [ "ENABLE_MOCK_WRITE_STRING" ]

  sources = [ "sub_session_test.cpp" ]

  deps = [ ":ws_unittest_common" ]

  external_deps = test_external_deps
}

ohos_unittest("ws_sub_session_lifecycle_test") {
  module_out_path = module_out_path

  sources = [ "sub_session_lifecycle_test.cpp" ]

  deps = [ ":ws_unittest_common" ]

  external_deps = test_external_deps
}

ohos_unittest("ws_task_scheduler_test") {
  module_out_path = module_out_path

  sources = [ "task_scheduler_test.cpp" ]

  deps = [ ":ws_unittest_common" ]

  external_deps = test_external_deps
  external_deps += [ "eventhandler:libeventhandler" ]
}

ohos_unittest("ws_session_permission_test") {
  module_out_path = module_out_path

  sources = [ "session_permission_test.cpp" ]

  deps = [ ":ws_unittest_common" ]

  external_deps = test_external_deps
}

ohos_unittest("ws_session_listener_controller_test") {
  module_out_path = module_out_path

  sources = [ "session_listener_controller_test.cpp" ]

  deps = [
    ":ws_unittest_common",
    "${window_base_path}/window_scene/interfaces/innerkits:libwsutils",
  ]

  external_deps = test_external_deps
}

ohos_unittest("ws_scene_persistent_storage_test") {
  module_out_path = module_out_path

  sources = [ "scene_persistent_storage_test.cpp" ]

  include_dirs = [ "${window_base_path}/window_scene/session/host/include" ]

  deps = [ ":ws_unittest_common" ]

  external_deps = test_external_deps
  external_deps += [
    "ability_base:session_info",
    "ability_base:want",
    "preferences:native_preferences",
  ]
}

ohos_unittest("ws_ffrt_helper_test") {
  module_out_path = module_out_path

  sources = [ "ws_ffrt_helper_test.cpp" ]
  include_dirs = [ "${window_base_path}/window_scene/session/host/include" ]

  deps = [ ":ws_unittest_common" ]

  external_deps = test_external_deps
}

ohos_unittest("ws_root_scene_session_test") {
  module_out_path = module_out_path

  sources = [ "root_scene_session_test.cpp" ]

  include_dirs = [ "${window_base_path}/window_scene/session/host/include" ]

  deps = [ ":ws_unittest_common" ]

  external_deps = test_external_deps
  external_deps += [ "ability_runtime:mission_info" ]
}

ohos_unittest("ws_scene_persistence_test") {
  module_out_path = module_out_path

  sources = [ "scene_persistence_test.cpp" ]

  include_dirs = [ "${window_base_path}/window_scene/session/host/include" ]

  deps = [ ":ws_unittest_common" ]

  external_deps = test_external_deps
}

ohos_unittest("ws_session_test") {
  module_out_path = module_out_path

  sources = [
    "session_test.cpp",
    "session_test2.cpp",
    "session_test3.cpp",
    "session_test4.cpp",
  ]

  cflags_cc = [ "-Wno-thread-safety" ]

  deps = [ ":ws_unittest_common" ]

  external_deps = test_external_deps
  external_deps += [
    "ability_base:session_info",
    "ability_base:want",
    "ability_runtime:app_manager",
    "ability_runtime:process_options",
    "accessibility:accessibility_common",
    "eventhandler:libeventhandler",
  ]

  cflags = []
  defines = []
  if (window_manager_feature_asbng_path_enable) {
    defines += [ "WINDOW_ATOMIC_SERVICE_ATTRIBUTION_ENABLE" ]
    cflags +=
        [ "-DACE_ENGINE_PLUGIN_PATH=\"${window_manager_feature_asbng_path}\"" ]
  }
}

ohos_unittest("ws_session_lifecycle_test") {
  module_out_path = module_out_path

  sources = [ "session_lifecycle_test.cpp" ]

  cflags_cc = [ "-Wno-thread-safety" ]

  deps = [ ":ws_unittest_common" ]

  external_deps = test_external_deps
  external_deps += [
    "ability_base:session_info",
    "ability_base:want",
    "ability_runtime:app_manager",
    "accessibility:accessibility_common",
    "eventhandler:libeventhandler",
  ]
}

ohos_unittest("ws_scene_board_judgement_test") {
  module_out_path = module_out_path

  include_dirs =
      [ "${window_base_path}/window_scene/interfaces/innerkits/include" ]

  sources = [ "scene_board_judgement_test.cpp" ]

  deps = [
    ":ws_unittest_common",
    "${window_base_path}/window_scene/interfaces/innerkits:libwsutils",
  ]
}

ohos_unittest("ws_window_scene_config_test") {
  module_out_path = module_out_path

  sources = [ "window_scene_config_test.cpp" ]

  deps = [ ":ws_unittest_common" ]

  external_deps = test_external_deps
}

ohos_unittest("ws_scene_session_manager_lite_test") {
  module_out_path = module_out_path

  sources = [ "scene_session_manager_lite_test.cpp" ]

  deps = [ ":ws_unittest_common" ]

  external_deps = test_external_deps
}

ohos_unittest("ws_scene_session_manager_lifecycle_test") {
  module_out_path = module_out_path

  sources = [ "scene_session_manager_lifecycle_test.cpp" ]

  cflags_cc = [ "-Wno-thread-safety" ]

  deps = [ ":ws_unittest_common" ]

  external_deps = test_external_deps
  external_deps += [
    "ability_base:configuration",
    "ability_base:session_info",
    "ability_runtime:ability_context_native",
    "ability_runtime:mission_info",
    "bundle_framework:appexecfwk_base",
    "bundle_framework:appexecfwk_core",
    "eventhandler:libeventhandler",
    "ffrt:libffrt",
  ]
}

ohos_unittest("ws_scene_session_manager_lifecycle_test2") {
  module_out_path = module_out_path

  sources = [
    "${window_base_path}/window_scene/test/mock/mock_accesstoken_kit.cpp",
    "scene_session_manager_lifecycle_test2.cpp",
  ]

  cflags_cc = [ "-Wno-thread-safety" ]

  deps = [ ":ws_unittest_common" ]

  external_deps = test_external_deps
  external_deps += [
    "ability_base:configuration",
    "ability_base:session_info",
    "ability_runtime:ability_context_native",
    "ability_runtime:mission_info",
    "bundle_framework:appexecfwk_base",
    "bundle_framework:appexecfwk_core",
    "eventhandler:libeventhandler",
  ]
}

ohos_unittest("ws_scene_session_manager_proxy_lifecycle_test") {
  module_out_path = module_out_path

  sources = [
    "../mock/mock_message_parcel.cpp",
    "scene_session_manager_proxy_lifecycle_test.cpp",
  ]

  deps = [ ":ws_unittest_common" ]

  external_deps = test_external_deps
  external_deps += [
    "ability_runtime:app_manager",
    "ability_runtime:mission_info",
  ]
}

ohos_unittest("ws_scene_session_manager_stub_lifecycle_test") {
  module_out_path = module_out_path

  sources = [ "scene_session_manager_stub_lifecycle_test.cpp" ]

  deps = [ ":ws_unittest_common" ]

  external_deps = test_external_deps
}

ohos_unittest("ws_session_stage_proxy_lifecycle_test") {
  module_out_path = module_out_path

  sources = [
    "../mock/mock_message_parcel.cpp",
    "session_stage_proxy_lifecycle_test.cpp",
  ]

  include_dirs = [ "${window_base_path}/window_scene/test/mock" ]
  deps = [ ":ws_unittest_common" ]

  external_deps = test_external_deps
  external_deps += [ "ability_base:base" ]
}

ohos_unittest("ws_session_stage_stub_lifecycle_test") {
  module_out_path = module_out_path

  sources = [ "session_stage_stub_lifecycle_test.cpp" ]

  deps = [ ":ws_unittest_common" ]

  external_deps = test_external_deps
}

ohos_unittest("ws_scene_session_manager_test") {
  module_out_path = module_out_path

  include_dirs = [
    "${window_base_path}/test/common/utils/include/",
    "${window_base_path}/window_scene/test/mock",
  ]

  sources = [
    "${window_base_path}/window_scene/test/mock/mock_accesstoken_kit.cpp",
    "scene_session_manager_test.cpp",
  ]

  cflags_cc = [ "-Wno-thread-safety" ]

  deps = [ ":ws_unittest_common" ]

  external_deps = test_external_deps
  external_deps += [
    "ability_base:configuration",
    "ability_base:session_info",
    "ability_runtime:ability_context_native",
    "ability_runtime:ability_manager",
    "ability_runtime:app_context",
    "ability_runtime:mission_info",
    "bundle_framework:appexecfwk_base",
    "bundle_framework:appexecfwk_core",
    "eventhandler:libeventhandler",
    "safwk:system_ability_fwk",
  ]
}

ohos_unittest("ws_scene_session_manager_one_test") {
  module_out_path = module_out_path

  include_dirs = [
    "${window_base_path}/test/common/utils/include/",
    "${window_base_path}/window_scene/test/mock",
  ]

  sources = [
    "${window_base_path}/window_scene/test/mock/mock_accesstoken_kit.cpp",
    "scene_session_manager_test2.cpp",
    "scene_session_manager_test3.cpp",
    "scene_session_manager_test4.cpp",
    "scene_session_manager_test5.cpp",
    "scene_session_manager_test6.cpp",
    "scene_session_manager_test7.cpp",
    "scene_session_manager_test8.cpp",
    "scene_session_manager_test9.cpp",
  ]

  cflags_cc = [ "-Wno-thread-safety" ]

  deps = [ ":ws_unittest_common" ]

  external_deps = test_external_deps
  external_deps += [
    "ability_base:configuration",
    "ability_base:session_info",
    "ability_runtime:ability_context_native",
    "ability_runtime:ability_manager",
    "ability_runtime:app_context",
    "ability_runtime:mission_info",
    "ability_runtime:runtime",
    "bundle_framework:appexecfwk_base",
    "bundle_framework:appexecfwk_core",
    "eventhandler:libeventhandler",
    "safwk:system_ability_fwk",
  ]
}

ohos_unittest("ws_scene_session_manager_two_test") {
  module_out_path = module_out_path

  include_dirs = [
    "${window_base_path}/test/common/utils/include/",
    "${window_base_path}/window_scene/test/mock",
    "${window_base_path}/window_scene/session/host/include/",
  ]

  sources = [
    "${window_base_path}/window_scene/test/mock/mock_accesstoken_kit.cpp",
    "scene_session_manager_test10.cpp",
    "scene_session_manager_test11.cpp",
    "scene_session_manager_test12.cpp",
  ]

  cflags_cc = [ "-Wno-thread-safety" ]

  deps = [ ":ws_unittest_common" ]

  external_deps = test_external_deps
  external_deps += [
    "ability_base:configuration",
    "ability_base:session_info",
    "ability_runtime:ability_context_native",
    "ability_runtime:ability_manager",
    "ability_runtime:app_context",
    "ability_runtime:mission_info",
    "ability_runtime:runtime",
    "bundle_framework:appexecfwk_base",
    "bundle_framework:appexecfwk_core",
    "eventhandler:libeventhandler",
    "safwk:system_ability_fwk",
  ]
}

ohos_unittest("ws_scene_session_manager_kiosk_test") {
  module_out_path = module_out_path

  include_dirs = [
    "${window_base_path}/test/common/utils/include/",
    "${window_base_path}/window_scene/test/mock",
  ]

  sources = [
    "${window_base_path}/window_scene/test/mock/mock_accesstoken_kit.cpp",
    "scene_session_manager_kiosk_test.cpp",
  ]

  deps = [ ":ws_unittest_common" ]

  external_deps = test_external_deps
  external_deps += [ "eventhandler:libeventhandler" ]
}

ohos_unittest("ws_window_manager_service_dump_test") {
  module_out_path = module_out_path
  include_dirs = [ "${window_base_path}/test/common/utils/include/" ]

  sources = [
    "${window_base_path}/window_scene/test/mock/mock_accesstoken_kit.cpp",
    "window_manager_service_dump_test.cpp",
  ]

  deps = [ ":ws_unittest_common" ]

  external_deps = test_external_deps
  external_deps += [
    "ability_base:configuration",
    "ability_base:session_info",
    "ability_runtime:ability_context_native",
    "ability_runtime:mission_info",
    "bundle_framework:appexecfwk_base",
    "bundle_framework:appexecfwk_core",
    "eventhandler:libeventhandler",
  ]
}

ohos_unittest("ws_ssmgr_specific_window_test") {
  module_out_path = module_out_path

  sources = [ "ssmgr_specific_window_test.cpp" ]

  cflags_cc = [ "-Wno-thread-safety" ]

  deps = [ ":ws_unittest_common" ]

  external_deps = test_external_deps
  external_deps += [
    "ability_base:configuration",
    "ability_base:session_info",
    "ability_runtime:ability_context_native",
    "ability_runtime:mission_info",
    "bundle_framework:appexecfwk_base",
    "bundle_framework:appexecfwk_core",
    "eventhandler:libeventhandler",
  ]
}

ohos_unittest("ws_scene_session_manager_proxy_test") {
  module_out_path = module_out_path

  configs =
      [ "${window_base_path}/window_scene/session:ui_effect_public_config" ]

  sources = [
    "../mock/mock_message_parcel.cpp",
    "scene_session_manager_proxy_test.cpp",
  ]

  defines = [ "ENABLE_MOCK_READ_INT32" ]

  deps = [ ":ws_unittest_common" ]

  external_deps = test_external_deps
  external_deps += [ "ability_runtime:mission_info" ]
}

ohos_unittest("ws_session_manager_agent_controller_test") {
  module_out_path = module_out_path

  sources = [ "session_manager_agent_controller_test.cpp" ]

  deps = [ ":ws_unittest_common" ]

  external_deps = test_external_deps
}

ohos_unittest("ws_session_manager_test") {
  module_out_path = module_out_path

  sources = [ "session_manager_test.cpp" ]

  deps = [
    ":ws_unittest_common",
    "${window_base_path}/window_scene/interfaces/innerkits:libwsutils",
  ]

  external_deps = test_external_deps
  external_deps += [
    "ability_base:session_info",
    "init:libbegetutil",
  ]
}

ohos_unittest("ws_session_manager_ut_test") {
  module_out_path = module_out_path

  sources = [ "session_manager_ut_test.cpp" ]

  deps = [
    ":ws_unittest_common",
    "${window_base_path}/window_scene/interfaces/innerkits:libwsutils",
  ]

  external_deps = test_external_deps
  external_deps += [
    "ability_base:session_info",
    "init:libbegetutil",
  ]
}

ohos_unittest("ws_session_manager_lite_test") {
  module_out_path = module_out_path

  include_dirs = [
    "${window_base_path}/window_scene/screen_session_manager/include/zidl",
    "${window_base_path}/window_scene/session_manager/include/zidl",
  ]

  sources = [
    "${window_base_path}/window_scene/session_manager/src/session_manager_lite.cpp",
    "${window_base_path}/window_scene/session_manager/src/zidl/scene_session_manager_lite_proxy.cpp",
    "session_manager_lite_test.cpp",
  ]

  deps = [
    ":ws_unittest_common",
    "${window_base_path}/window_scene/interfaces/innerkits:libwsutils",
  ]

  external_deps = test_external_deps
  external_deps += [
    "ability_base:session_info",
    "ability_base:want",
    "ability_runtime:mission_info",
    "ipc:ipc_single",
    "samgr:samgr_proxy",
  ]
}

ohos_unittest("ws_session_manager_lite_ut_test") {
  module_out_path = module_out_path

  include_dirs = [
    "${window_base_path}/window_scene/screen_session_manager/include/zidl",
    "${window_base_path}/window_scene/session_manager/include/zidl",
  ]

  sources = [
    "${window_base_path}/window_scene/session_manager/src/session_manager_lite.cpp",
    "${window_base_path}/window_scene/session_manager/src/zidl/scene_session_manager_lite_proxy.cpp",
    "session_manager_lite_ut_test.cpp",
  ]

  deps = [
    ":ws_unittest_common",
    "${window_base_path}/window_scene/interfaces/innerkits:libwsutils",
  ]

  external_deps = test_external_deps
  external_deps += [
    "ability_base:session_info",
    "ability_base:want",
    "ability_runtime:mission_info",
    "ipc:ipc_single",
    "samgr:samgr_proxy",
  ]
}

ohos_unittest("ws_scene_session_manager_stub_test") {
  module_out_path = module_out_path

  sources = [ "scene_session_manager_stub_test.cpp" ]

  deps = [ ":ws_unittest_common" ]

  external_deps = test_external_deps
}

ohos_unittest("ws_scene_session_manager_stub_test2") {
  module_out_path = module_out_path

  configs =
      [ "${window_base_path}/window_scene/session:ui_effect_public_config" ]

  sources = [
    "${window_base_path}/window_scene/test/mock/mock_message_parcel.cpp",
    "scene_session_manager_stub_test2.cpp",
  ]

  deps = [ ":ws_unittest_common" ]

  external_deps = test_external_deps
}

ohos_unittest("ws_scene_session_manager_supplement_test") {
  module_out_path = module_out_path
  include_dirs = [ "${window_base_path}/test/common/utils/include/" ]
  sources = [ "scene_session_manager_supplement_test.cpp" ]

  cflags_cc = [ "-Wno-thread-safety" ]

  deps = [
    ":ws_unittest_common",
    "${window_base_path}/test/common/utils:libtestutil",
  ]

  public_deps =
      [ "${window_base_path}/window_scene/interfaces/innerkits:libwsutils" ]

  external_deps = test_external_deps
  external_deps += [
    "ability_base:session_info",
    "ability_runtime:ability_context_native",
    "ability_runtime:mission_info",
    "bundle_framework:appexecfwk_base",
    "bundle_framework:appexecfwk_core",
  ]
}

ohos_unittest("ws_scene_session_test") {
  module_out_path = module_out_path

  sources = [
    "${window_base_path}/window_scene/test/mock/mock_accesstoken_kit.cpp",
    "scene_session_test.cpp",
    "scene_session_test2.cpp",
    "scene_session_test3.cpp",
    "scene_session_test4.cpp",
    "scene_session_test5.cpp",
    "scene_session_test6.cpp",
  ]

  cflags_cc = [ "-Wno-thread-safety" ]

  deps = [ ":ws_unittest_common" ]

  external_deps = test_external_deps
  external_deps += [
    "ability_base:session_info",
    "ability_runtime:app_context",
    "eventhandler:libeventhandler",
    "preferences:native_preferences",
  ]
}

ohos_unittest("ws_session_specific_window_test") {
  module_out_path = module_out_path

  sources = [ "session_specific_window_test.cpp" ]

  deps = [ ":ws_unittest_common" ]

  external_deps = test_external_deps
  external_deps += [
    "ability_base:session_info",
    "ability_base:want",
    "ability_runtime:process_options",
    "eventhandler:libeventhandler",
  ]
}

ohos_unittest("ws_scene_session_lifecycle_test") {
  module_out_path = module_out_path

  sources = [ "scene_session_lifecycle_test.cpp" ]

  cflags_cc = [ "-Wno-thread-safety" ]

  deps = [ ":ws_unittest_common" ]

  external_deps = test_external_deps
  external_deps += [
    "ability_base:session_info",
    "ability_runtime:process_options",
  ]

  cflags = []
  defines = []
  if (window_manager_feature_asbng_path_enable) {
    defines += [ "WINDOW_ATOMIC_SERVICE_ATTRIBUTION_ENABLE" ]
    cflags +=
        [ "-DACE_ENGINE_PLUGIN_PATH=\"${window_manager_feature_asbng_path}\"" ]
  }
}

ohos_unittest("ws_window_session_property_test") {
  module_out_path = module_out_path

  sources = [ "window_session_property_test.cpp" ]

  deps = [ ":ws_unittest_common" ]

  external_deps = test_external_deps
}

ohos_unittest("ws_compatible_mode_property_test") {
  module_out_path = module_out_path

  sources = [ "compatible_mode_property_test.cpp" ]

  deps = [ ":ws_unittest_common" ]

  external_deps = test_external_deps
}

ohos_unittest("ws_window_event_channel_test") {
  module_out_path = module_out_path

  sources = [ "window_event_channel_test.cpp" ]

  deps = [
    ":ws_unittest_common",
    "${window_base_path}/window_scene/interfaces/innerkits:libwsutils",
  ]

  external_deps = test_external_deps
}

ohos_unittest("ws_move_drag_controller_test") {
  module_out_path = module_out_path

  sources = [ "move_drag_controller_test.cpp" ]

  deps = [
    ":ws_unittest_common",
    "${window_base_path}/window_scene/interfaces/innerkits:libwsutils",
  ]

  external_deps = test_external_deps
}

ohos_unittest("ws_multi_instance_manager_test") {
  module_out_path = module_out_path

  sources = [ "multi_instance_manager_test.cpp" ]

  deps = [ ":ws_unittest_common" ]

  external_deps = test_external_deps
  external_deps += [
    "bundle_framework:appexecfwk_base",
    "bundle_framework:appexecfwk_core",
  ]
}

ohos_unittest("ws_pc_fold_screen_controller_test") {
  module_out_path = module_out_path

  sources = [ "pc_fold_screen_controller_test.cpp" ]

  deps = [ ":ws_unittest_common" ]

  external_deps = test_external_deps
}

ohos_unittest("ws_session_proxy_test") {
  module_out_path = module_out_path

  include_dirs = [
    "${window_base_path}/window_scene/session/host/include/zidl",
    "${window_base_path}/window_scene/test/mock",
  ]
  sources = [
    "${window_base_path}/window_scene/test/mock/mock_message_parcel.cpp",
    "session_proxy_test.cpp",
  ]

  defines = [
    "ENABLE_MOCK_READ_UINT32",
    "ENABLE_MOCK_READ_INT32",
  ]

  deps = [
    ":ws_unittest_common",
    "${window_base_path}/window_scene/session:screen_session",
  ]

  external_deps = test_external_deps
  external_deps += [
    "ability_base:session_info",
    "ability_base:want",
  ]
}

ohos_unittest("ws_session_proxy_lifecycle_test") {
  module_out_path = module_out_path

  include_dirs =
      [ "${window_base_path}/window_scene/session/host/include/zidl" ]
  sources = [ "session_proxy_lifecycle_test.cpp" ]

  deps = [
    ":ws_unittest_common",
    "${window_base_path}/window_scene/session:screen_session",
  ]

  external_deps = test_external_deps
  external_deps += [
    "ability_base:session_info",
    "ability_base:want",
  ]
}

ohos_unittest("ws_session_proxy_mock_test") {
  module_out_path = module_out_path

  include_dirs = [
    "${window_base_path}/window_scene/session/host/include/zidl",
    "${window_base_path}/window_scene/test/mock",
  ]

  sources = [
    "../mock/mock_message_parcel.cpp",
    "session_proxy_mock_test.cpp",
  ]

  deps = [
    ":ws_unittest_common",
    "${window_base_path}/window_scene/session:screen_session",
  ]

  external_deps = test_external_deps
  external_deps += [
    "ability_base:session_info",
    "ability_base:want",
  ]
}

ohos_unittest("ws_session_proxy_immersive_test") {
  module_out_path = module_out_path

  include_dirs =
      [ "${window_base_path}/window_scene/session/host/include/zidl" ]
  sources = [ "session_proxy_immersive_test.cpp" ]

  deps = [
    ":ws_unittest_common",
    "${window_base_path}/window_scene/session:screen_session",
  ]

  external_deps = test_external_deps
  external_deps += [
    "ability_base:session_info",
    "ability_base:want",
  ]
}

ohos_unittest("ws_session_proxy_property_test") {
  module_out_path = module_out_path

  include_dirs = [
    "${window_base_path}/window_scene/session/host/include/zidl",
    "${window_base_path}/window_scene/test/mock",
  ]

  sources = [
    "../mock/mock_message_parcel.cpp",
    "session_proxy_property_test.cpp",
  ]

  deps = [
    ":ws_unittest_common",
    "${window_base_path}/window_scene/session:screen_session",
  ]

  external_deps = test_external_deps
  external_deps += [
    "ability_base:session_info",
    "ability_base:want",
  ]
}

ohos_unittest("ws_scene_session_converter_test") {
  module_out_path = module_out_path

  sources = [ "scene_session_converter_test.cpp" ]

  deps = [ ":ws_unittest_common" ]

  external_deps = test_external_deps
  external_deps += [
    "ability_runtime:mission_info",
    "bundle_framework:appexecfwk_base",
    "bundle_framework:appexecfwk_core",
  ]
}

ohos_unittest("ws_session_stage_proxy_test") {
  module_out_path = module_out_path

  sources = [
    "../mock/mock_message_parcel.cpp",
    "session_stage_proxy_test.cpp",
  ]

  defines = [ "ENABLE_MOCK_WRITE_STRING" ]

  include_dirs = [ "${window_base_path}/window_scene/test/mock" ]

  deps = [ ":ws_unittest_common" ]

  external_deps = test_external_deps
  external_deps += [ "ability_base:base" ]
}

ohos_unittest("ws_session_stage_stub_test") {
  module_out_path = module_out_path

  sources = [ "session_stage_stub_test.cpp" ]

  deps = [ ":ws_unittest_common" ]

  external_deps = test_external_deps
  external_deps += [ "ability_base:base" ]
}

ohos_unittest("ws_window_event_channel_proxy_test") {
  module_out_path = module_out_path

  sources = [ "window_event_channel_proxy_test.cpp" ]

  deps = [ ":ws_unittest_common" ]

  external_deps = test_external_deps
}

ohos_unittest("ws_window_event_channel_proxy_mock_test") {
  module_out_path = module_out_path

  sources = [
    "../mock/mock_message_parcel.cpp",
    "window_event_channel_proxy_mock_test.cpp",
  ]

  include_dirs = [ "${window_base_path}/window_scene/test/mock" ]

  defines = [
    "ENABLE_MOCK_WRITE_STRING",
    "ENABLE_MOCK_WRITE_STRING_VECTOR",
    "ENABLE_MOCK_READ_INT64",
  ]

  deps = [ ":ws_unittest_common" ]

  external_deps = test_external_deps
}

ohos_unittest("ws_window_event_channel_stub_test") {
  module_out_path = module_out_path

  sources = [ "window_event_channel_stub_test.cpp" ]

  deps = [ ":ws_unittest_common" ]

  external_deps = test_external_deps
}

ohos_unittest("ws_window_event_channel_stub_mock_test") {
  module_out_path = module_out_path

  sources = [
    "../mock/mock_message_parcel.cpp",
    "window_event_channel_stub_mock_test.cpp",
  ]

  include_dirs = [ "${window_base_path}/window_scene/test/mock" ]

  deps = [ ":ws_unittest_common" ]

  external_deps = test_external_deps
}

ohos_unittest("ws_hidumper_controller_test") {
  module_out_path = module_out_path

  sources = [ "hidumper_controller_test.cpp" ]

  deps = [ ":ws_unittest_common" ]

  external_deps = test_external_deps
}

ohos_unittest("ws_session_stub_test") {
  module_out_path = module_out_path

  sources = [ "session_stub_test.cpp" ]

  deps = [ ":ws_unittest_common" ]

  external_deps = test_external_deps

  public_external_deps = [ "accessibility:accessibility_interface" ]
}

ohos_unittest("ws_session_stub_lifecycle_test") {
  module_out_path = module_out_path

  sources = [ "session_stub_lifecycle_test.cpp" ]

  deps = [ ":ws_unittest_common" ]

  external_deps = test_external_deps

  public_external_deps = [ "accessibility:accessibility_interface" ]
}

ohos_unittest("ws_session_stub_mock_test") {
  module_out_path = module_out_path

  sources = [
    "../mock/mock_message_parcel.cpp",
    "session_stub_mock_test.cpp",
  ]

  defines = [ "ENABLE_MOCK_READ_INT64" ]

  include_dirs = [ "${window_base_path}/window_scene/test/mock" ]

  deps = [ ":ws_unittest_common" ]

  external_deps = test_external_deps

  public_external_deps = [ "accessibility:accessibility_interface" ]
}

ohos_unittest("ws_session_stub_immersive_test") {
  module_out_path = module_out_path

  sources = [ "session_stub_immersive_test.cpp" ]

  deps = [ ":ws_unittest_common" ]

  external_deps = test_external_deps

  public_external_deps = [ "accessibility:accessibility_interface" ]
}

ohos_unittest("ws_session_stub_property_test") {
  module_out_path = module_out_path

  sources = [ "session_stub_property_test.cpp" ]

  deps = [ ":ws_unittest_common" ]

  external_deps = test_external_deps

  public_external_deps = [ "accessibility:accessibility_interface" ]
}

ohos_unittest("ws_distributed_client_test") {
  module_out_path = module_out_path

  sources = [
    "../mock/mock_message_parcel.cpp",
    "distributed_client_test.cpp",
  ]

  deps = [ ":ws_unittest_common" ]

  external_deps = test_external_deps
  external_deps += [ "ability_runtime:mission_info" ]
}

ohos_unittest("ws_scene_session_manager_lite_stub_test") {
  module_out_path = module_out_path

  sources = [ "scene_session_manager_lite_stub_test.cpp" ]

  deps = [ ":ws_unittest_common" ]

  external_deps = test_external_deps
}

ohos_unittest("ws_session_manager_service_recover_proxy_test") {
  module_out_path = module_out_path

  include_dirs = [ "../mock" ]

  sources = [
    "../mock/mock_message_parcel.cpp",
    "session_manager_service_recover_proxy_test.cpp",
  ]

  deps = [
    ":ws_unittest_common",
    "${window_base_path}/wmserver:sms",
  ]

  external_deps = test_external_deps
}

ohos_unittest("ws_mock_session_manager_service_test") {
  module_out_path = module_out_path

  include_dirs = [ "../mock" ]

  sources = [
    "${window_base_path}/window_scene/test/mock/mock_accesstoken_kit.cpp",
    "mock_session_manager_service_test.cpp",
  ]

  deps = [
    ":ws_unittest_common",
    "${window_base_path}/window_scene/interfaces/innerkits:libwsutils",
    "${window_base_path}/wmserver:sms",
  ]

  external_deps = test_external_deps
  external_deps += [ "safwk:system_ability_fwk" ]
}

ohos_unittest("ws_dfx_hisysevent_test") {
  module_out_path = module_out_path

  sources = [ "dfx_hisysevent_test.cpp" ]

  deps = [ ":ws_unittest_common" ]

  external_deps = test_external_deps
  external_deps += [ "hisysevent:libhisysevent" ]
}

ohos_unittest("ws_window_manager_lru_test") {
  module_out_path = module_out_path

  sources = [ "window_manager_lru_test.cpp" ]

  deps = [ ":ws_unittest_common" ]

  external_deps = test_external_deps
}

## Build ws_unittest_common.a {{{
config("ws_unittest_common_public_config") {
  include_dirs = [
    "${window_base_path}/test/common/mock",

    # for WMError Code
    "${window_base_path}/dm/include",
    "${window_base_path}/dmserver/include",
    "${window_base_path}/interfaces/innerkits/dm",
    "${window_base_path}/interfaces/innerkits/wm",
    "${window_base_path}/window_scene/screen_session_manager_client/include",
    "${window_base_path}/window_scene/screen_session_manager/include",
    "${window_base_path}/window_scene/session_manager/include",
    "${window_base_path}/window_scene/session_manager_service/include",
    "${window_base_path}/window_scene/common/include",
    "${window_base_path}/window_scene",
    "${window_base_path}/window_scene/test",
    "${window_base_path}/window_scene/intention_event/service/event_stage/include",

    # for window_manager_interface
    "${window_base_path}/wmserver/include",
    "${window_base_path}/wmserver/include/zidl",
    "${window_base_path}/wm/include",
    "${window_base_path}/wm/include/zidl",

    # for session
    "${window_base_path}/window_scene/session/container/include/zidl",

    # for session_manager
    "${window_base_path}/window_scene/interfaces/include",

    "${window_base_path}/wm/include",
    "${window_base_path}/wm/include/zidl",

    # for window_manager_hilog
    "${window_base_path}/utils/include",

    "${dmserver_gen_path}",
  ]
}

ohos_static_library("ws_unittest_common") {
  visibility = [
    ":*",
    "animation:*",
    "event_distribution:*",
    "layout:*",
    "multi_user:*",
    "rotation:*",
    "ui_extension:*",
    "window_focus:*",
    "window_keyboard:*",
    "window_pattern:*",
    "window_recover:*",
  ]
  testonly = true

  public_configs = [
    ":ws_unittest_common_public_config",
    "${window_base_path}/resources/config/build:coverage_flags",
    "${window_base_path}/resources/config/build:testcase_flags",
    "${window_base_path}/wmserver:libidl_config",
  ]

  deps = [
    "${window_base_path}/dm:libdm",
    "${window_base_path}/utils:libwmutil",
    "${window_base_path}/utils:libwmutil_base",
    "${window_base_path}/window_scene/common:window_scene_common",
    "${window_base_path}/window_scene/intention_event/service:intention_event_anr_manager",
    "${window_base_path}/window_scene/screen_session_manager:screen_session_manager",
    "${window_base_path}/window_scene/screen_session_manager_client:screen_session_manager_client",
    "${window_base_path}/window_scene/session:scene_session",
    "${window_base_path}/window_scene/session:screen_session",
    "${window_base_path}/window_scene/session_manager:scene_session_manager",
    "${window_base_path}/window_scene/session_manager:session_manager",
    "${window_base_path}/window_scene/session_manager:session_manager_lite",
    "${window_base_path}/wm:libwm",
    "${window_base_path}/wm:libwm_lite",
  ]

  public_deps = [
    "${window_base_path}/utils:libwmutil",
    "${window_base_path}/utils:libwmutil_base",
  ]

  external_deps = test_external_deps

  public_external_deps = [
    "ability_base:session_info",
    "ability_base:want",
  ]
  defines = []
  if (defined(global_parts_info) && defined(global_parts_info.sensors_sensor)) {
    external_deps += [ "sensor:sensor_interface_native" ]
    defines += [ "SENSOR_ENABLE" ]
  }

  part_name = "window_manager"
  subsystem_name = "window"
}

ohos_unittest("ws_scene_system_ability_listener_test") {
  module_out_path = module_out_path

  sources = [ "scene_system_ability_listener_test.cpp" ]

  deps = [ ":ws_unittest_common" ]

  external_deps = test_external_deps
  external_deps += [
    "eventhandler:libeventhandler",
    "samgr:samgr_proxy",
  ]

  if (defined(global_parts_info) &&
      defined(global_parts_info.resourceschedule_resource_schedule_service)) {
    external_deps += [ "resource_schedule_service:ressched_client" ]
    defines = [ "RESOURCE_SCHEDULE_SERVICE_ENABLE" ]
  }
}

ohos_unittest("ws_session_change_recorder_test") {
  module_out_path = module_out_path

  sources = [ "session_change_recorder_test.cpp" ]

  cflags_cc = [ "-Wno-thread-safety" ]

  deps = [ ":ws_unittest_common" ]

  external_deps = [
    "ability_base:configuration",
    "ability_base:session_info",
    "ability_runtime:ability_context_native",
    "ability_runtime:mission_info",
    "bundle_framework:appexecfwk_base",
    "bundle_framework:appexecfwk_core",
    "eventhandler:libeventhandler",
    "hilog:libhilog",
    "image_framework:image_native",
    "image_framework:pixelconvertadapter",
  ]
}

ohos_unittest("ws_scene_screen_change_listener_test") {
  module_out_path = module_out_path

  include_dirs = [
    "${window_base_path}/test/common/utils/include/",
    "${window_base_path}/window_scene/test/mock/",
  ]

  sources = [ "scene_screen_change_listener_test.cpp" ]

  cflags_cc = [ "-Wno-thread-safety" ]

  deps = [ ":ws_unittest_common" ]

  external_deps = test_external_deps
  external_deps += [ "ability_base:session_info" ]
}

ohos_unittest("ws_session_coordinate_helper_test") {
  module_out_path = module_out_path

  include_dirs = [
    "${window_base_path}/test/common/utils/include/",
    "${window_base_path}/window_scene/test/mock/",
  ]

  sources = [ "session_coordinate_helper_test.cpp" ]

  cflags_cc = [ "-Wno-thread-safety" ]

  deps = [ ":ws_unittest_common" ]

  external_deps = test_external_deps
}

ohos_unittest("ws_session_utils_test") {
  module_out_path = module_out_path

  include_dirs = [
    "${window_base_path}/test/common/utils/include/",
    "${window_base_path}/window_scene/session/host/include/",
    "${window_base_path}/window_scene/test/mock/",
  ]

  sources = [ "session_utils_test.cpp" ]

  cflags_cc = [ "-Wno-thread-safety" ]

  deps = [ ":ws_unittest_common" ]

  external_deps = test_external_deps
}

ohos_unittest("pip_change_listener_proxy_test") {
  module_out_path = module_out_path

  include_dirs = [ "../mock" ]

  sources = [
  "../mock/mock_message_parcel.cpp",
  "pip_change_listener_proxy_test.cpp",
  ]

  deps = [ ":ws_unittest_common" ]

  external_deps = test_external_deps
}

ohos_unittest("pip_change_listener_stub_test") {
  module_out_path = module_out_path

  sources = [
  "pip_change_listener_stub_test.cpp",
  ]

  deps = [ ":ws_unittest_common" ]

  external_deps = test_external_deps
}
## Build ws_unittest_common.a }}}
