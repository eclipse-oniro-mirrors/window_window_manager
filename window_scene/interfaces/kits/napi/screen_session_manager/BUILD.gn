# Copyright (c) 2023 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("../../../../../windowmanager_aafwk.gni")

config("screen_session_manager_napi_public_config") {
  visibility = [ ":*" ]
  include_dirs = [
    "${window_base_path}/window_scene/interfaces/kits/napi",
    "${window_base_path}/wm/include",
  ]
}

ohos_shared_library("screensessionmanager_napi") {
  sources = [
    "js_device_screen_config.cpp",
    "js_screen_session.cpp",
    "js_screen_session_manager.cpp",
    "js_screen_utils.cpp",
    "screen_session_manager_module.cpp",
  ]

  public_configs = [ ":screen_session_manager_napi_public_config" ]

  deps = [
    "${window_base_path}/dm:libdm",
    "${window_base_path}/utils:libwmutil",
    "${window_base_path}/utils:libwmutil_base",
    "${window_base_path}/window_scene/screen_session_manager:screen_session_manager_client",
    "${window_base_path}/window_scene/session:screen_session",
    "${window_base_path}/wm:libwm",
  ]

  external_deps = [
    "ability_runtime:app_manager",
    "ability_runtime:runtime",
    "c_utils:utils",
    "eventhandler:libeventhandler",
    "graphic_2d:librender_service_client",
    "hilog:libhilog",
    "hitrace:hitrace_meter",
    "image_framework:image",
    "image_framework:image_native",
    "ipc:ipc_core",
    "napi:ace_napi",
  ]

  defines = []
  if (defined(global_parts_info) &&
      defined(global_parts_info.powermgr_power_manager)) {
    external_deps += [ "power_manager:powermgr_client" ]
    defines += [ "POWER_MANAGER_ENABLE" ]
  }

  relative_install_dir = "module"
  part_name = "window_manager"
  subsystem_name = "window"

  if (build_variant == "user") {
    defines += [ "IS_RELEASE_VERSION" ]
  }
}
