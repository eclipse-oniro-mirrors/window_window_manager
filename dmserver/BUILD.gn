# Copyright (c) 2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("../windowmanager_aafwk.gni")

## Build libdms.so
config("libdms_private_config") {
  include_dirs = [
    "../dm/include",
    "../interfaces/innerkits/dm",
  ]
}

config("libdms_public_config") {
  include_dirs = [ "include" ]
}

ohos_shared_library("libdms") {
  branch_protector_ret = "pac_ret"
  sanitize = {
    cfi = true
    cfi_cross_dso = true
    cfi_vcall_icall_only = true
    debug = false
  }
  sources = [
    "../dm/src/zidl/display_manager_agent_proxy.cpp",
    "src/abstract_display.cpp",
    "src/abstract_display_controller.cpp",
    "src/abstract_screen.cpp",
    "src/abstract_screen_controller.cpp",
    "src/display_cutout_controller.cpp",
    "src/display_dumper.cpp",
    "src/display_manager_agent_controller.cpp",
    "src/display_manager_config.cpp",
    "src/display_manager_service.cpp",
    "src/display_manager_service_inner.cpp",
    "src/display_manager_stub.cpp",
    "src/display_power_controller.cpp",
    "src/screen_rotation_controller.cpp",
    "src/sensor_connector.cpp",
    "src/sensor_plugin.cpp",
  ]

  configs = [
    ":libdms_private_config",
    "../resources/config/build:coverage_flags",
  ]

  public_configs = [ ":libdms_public_config" ]

  deps = [
    "${window_base_path}/utils:libwmutil_base",
    "${window_base_path}/window_scene/interfaces/innerkits:libwsutils",
    "../utils:libwmutil",
  ]

  external_deps = [
    "c_utils:utils",
    "config_policy:configpolicy_util",
    "eventhandler:libeventhandler",
    "graphic_2d:librender_service_base",
    "graphic_2d:librender_service_client",
    "graphic_surface:surface",
    "hilog:libhilog",
    "hitrace:hitrace_meter",
    "ipc:ipc_single",
    "libxml2:libxml2",
    "safwk:system_ability_fwk",
    "samgr:samgr_proxy",
  ]

  defines = []
  if (window_manager_feature_subscribe_motion) {
    if (defined(global_parts_info) && defined(global_parts_info.msdp_motion)) {
      defines += [ "WM_SUBSCRIBE_MOTION_ENABLE" ]
    }
  }

  if (is_standard_system) {
    external_deps += [ "init:libbegetutil" ]
  } else {
    external_deps += [ "init_lite:libbegetutil" ]
  }

  if (defined(global_parts_info) &&
      defined(global_parts_info.resourceschedule_soc_perf)) {
    external_deps += [ "soc_perf:socperf_client" ]
    defines += [ "SOC_PERF_ENABLE" ]
  }

  if (defined(global_parts_info) && defined(global_parts_info.sensors_sensor)) {
    external_deps += [ "sensor:sensor_interface_native" ]
    defines += [ "SENSOR_ENABLE" ]
  }

  part_name = "window_manager"
  subsystem_name = "window"

  if (build_variant == "user") {
    defines += [ "IS_RELEASE_VERSION" ]
  }
}

group("test") {
  testonly = true
  deps = [ "test:test" ]
}
