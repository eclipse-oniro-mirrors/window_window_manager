# Copyright (c) 2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/test.gni")

module_out_path = "window_manager/dmserver"

group("unittest") {
  testonly = true

  deps = [
    ":dmserver_abstract_display_test",
    ":dmserver_abstract_screen_controller_test",
    ":dmserver_abstract_screen_test",
    ":dmserver_display_cutout_controller_test",
    ":dmserver_display_dumper_test",
    ":dmserver_display_manager_agent_controller_test",
    ":dmserver_display_manager_proxy_test",
    ":dmserver_display_manager_service_test",
    ":dmserver_screen_rotation_controller_test",
  ]
}

ohos_unittest("dmserver_abstract_screen_controller_test") {
  module_out_path = module_out_path

  sources = [ "abstract_screen_controller_test.cpp" ]

  deps = [ ":dmserver_unittest_common" ]
}

ohos_unittest("dmserver_display_manager_agent_controller_test") {
  module_out_path = module_out_path

  sources = [ "display_manager_agent_controller_test.cpp" ]

  deps = [ ":dmserver_unittest_common" ]
}

ohos_unittest("dmserver_abstract_display_test") {
  module_out_path = module_out_path

  sources = [ "abstract_display_test.cpp" ]

  deps = [ ":dmserver_unittest_common" ]
}

ohos_unittest("dmserver_display_manager_service_test") {
  module_out_path = module_out_path

  sources = [ "display_manager_service_test.cpp" ]

  deps = [ ":dmserver_unittest_common" ]
}

ohos_unittest("dmserver_display_manager_proxy_test") {
  module_out_path = module_out_path

  sources = [ "display_manager_proxy_test.cpp" ]

  deps = [ ":dmserver_unittest_common" ]

  external_deps = [ "graphic_standard:surface" ]
}

ohos_unittest("dmserver_screen_rotation_controller_test") {
  module_out_path = module_out_path

  sources = [ "screen_rotation_controller_test.cpp" ]

  deps = [ ":dmserver_unittest_common" ]
}

ohos_unittest("dmserver_display_dumper_test") {
  module_out_path = module_out_path

  sources = [ "display_dumper_test.cpp" ]

  deps = [ ":dmserver_unittest_common" ]
}

ohos_unittest("dmserver_display_cutout_controller_test") {
  module_out_path = module_out_path

  sources = [ "display_cutout_controller_test.cpp" ]

  deps = [ ":dmserver_unittest_common" ]
}

ohos_unittest("dmserver_abstract_screen_test") {
  module_out_path = module_out_path

  sources = [ "abstract_screen_test.cpp" ]

  deps = [ ":dmserver_unittest_common" ]
}

## Build dmserver_unittest_common.a {{{
config("dmserver_unittest_common_public_config") {
  include_dirs = [
    "//foundation/window/window_manager/dm/include",
    "//foundation/window/window_manager/dmserver/include",
    "//foundation/window/window_manager/snapshot",
    "//foundation/window/window_manager/interfaces/innerkits/dm",
    "//foundation/window/window_manager/test/common/mock",
    "//foundation/window/window_manager/test/common/utils/include",
    "//foundation/window/window_manager/utils/include",
    "//foundation/graphic/graphic_2d/rosen/modules/render_service_client",  # RSSurface
    "//base/sensors/sensor/interfaces/native/include",
  ]
}

ohos_static_library("dmserver_unittest_common") {
  visibility = [ ":*" ]
  testonly = true

  public_configs = [
    ":dmserver_unittest_common_public_config",
    "//foundation/window/window_manager/resources/config/build:coverage_flags",
    "//foundation/window/window_manager/resources/config/build:testcase_flags",
  ]

  public_deps = [
    "//commonlibrary/c_utils/base:utils",
    "//foundation/graphic/graphic_2d/rosen/modules/render_service_client:librender_service_client",
    "//foundation/multimedia/image_framework/interfaces/innerkits:image_native",  # PixelMap
    "//foundation/multimodalinput/input/frameworks/proxy:libmmi-client",
    "//foundation/window/window_manager/dm:libdm",
    "//foundation/window/window_manager/dmserver:libdms",
    "//foundation/window/window_manager/snapshot:snapshot_display",
    "//foundation/window/window_manager/test/common/utils:libtestutil",
    "//foundation/window/window_manager/utils:libwmutil",
    "//foundation/window/window_manager/wm:libwm",
    "//third_party/googletest:gmock",
    "//third_party/googletest:gtest_main",
    "//third_party/libjpeg-turbo:turbojpeg_static",  # jpeg
  ]

  external_deps = [
    "access_token:libaccesstoken_sdk",
    "access_token:libnativetoken",
    "access_token:libtoken_setproc",
    "hilog_native:libhilog",
    "ipc:ipc_core",
    "sensor:sensor_interface_native",
  ]
  subsystem_name = "window"
  part_name = "window_manager"
}
## Build dmserver_unittest_common.a }}}
