# Copyright (c) 2021-2025 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/test.gni")
import("../../../windowmanager_aafwk.gni")

module_out_path = "window_manager/OH-DMS/dms"

group("systemtest") {
  testonly = true

  deps = [
    ":dms_display_minimal_test",
    ":dms_display_update_test",
    ":dms_private_window_test",
    ":dms_screen_manager_test",
  ]

  if (window_manager_use_sceneboard) {
    deps += [
      ":dms_screenshot_test",
      ":dms_display_power_test",
      ":dms_display_change_test",
      ":dms_display_manager_test",
    ]
  }
}

test_external_deps = [
  "ability_base:want",
  "cJSON:cjson_static",
  "c_utils:utils",
  "googletest:gmock",
  "googletest:gtest",
  "googletest:gtest_main",
  "graphic_2d:librender_service_base",
  "graphic_2d:librender_service_client",
  "hilog:libhilog",
  "image_framework:image_native",
  "selinux_adapter:librestorecon",
]

ohos_systemtest("dms_private_window_test") {
  module_out_path = module_out_path

  sources = [ "private_window_test.cpp" ]

  deps = [ ":dms_systemtest_common" ]

  external_deps = test_external_deps
}

ohos_systemtest("dms_display_minimal_test") {
  module_out_path = module_out_path

  sources = [ "display_minimal_test.cpp" ]

  deps = [ ":dms_systemtest_common" ]

  external_deps = test_external_deps
}

ohos_systemtest("dms_display_manager_test") {
  module_out_path = module_out_path

  sources = [ "display_manager_test.cpp" ]

  deps = [ ":dms_systemtest_common" ]

  external_deps = test_external_deps
}

ohos_systemtest("dms_display_power_test") {
  sanitize = {
    cfi = true
    cfi_cross_dso = true
    cfi_vcall_icall_only = true
    debug = false
  }
  module_out_path = module_out_path

  sources = [ "display_power_test.cpp" ]

  deps = [ ":dms_systemtest_common" ]

  external_deps = test_external_deps
}

ohos_systemtest("dms_display_change_test") {
  module_out_path = module_out_path

  sources = [ "display_change_test.cpp" ]

  deps = [ ":dms_systemtest_common" ]

  external_deps = test_external_deps
}

ohos_systemtest("dms_screenshot_test") {
  sanitize = {
    cfi = true
    cfi_cross_dso = true
    cfi_vcall_icall_only = true
    debug = false
  }
  module_out_path = module_out_path

  sources = [ "screenshot_test.cpp" ]

  deps = [ ":dms_systemtest_common" ]

  external_deps = test_external_deps
}

ohos_systemtest("dms_screen_manager_test") {
  sanitize = {
    cfi = true
    cfi_cross_dso = true
    cfi_vcall_icall_only = true
    debug = false
  }
  module_out_path = module_out_path

  sources = [ "screen_manager_test.cpp" ]

  deps = [ ":dms_systemtest_common" ]

  external_deps = test_external_deps
  external_deps += [ "init:libbegetutil" ]
}

ohos_systemtest("dms_screen_gamut_test") {
  module_out_path = module_out_path

  sources = [ "screen_gamut_test.cpp" ]

  deps = [ ":dms_systemtest_common" ]

  external_deps = test_external_deps
}

ohos_systemtest("dms_display_update_test") {
  module_out_path = module_out_path

  sources = [ "display_update_test.cpp" ]

  deps = [ ":dms_systemtest_common" ]

  external_deps = test_external_deps
}

## Build dms_systemtest_common.a {{{
config("dms_systemtest_common_public_config") {
  include_dirs = [
    "../../../dm/include",
    "../../../dmserver/include",
    "../../../interfaces/innerkits/dm",
    "../../../interfaces/innerkits/wm",
    "../../common/utils/include",
    "../../../utils/include",
    "${dmserver_gen_path}",
    "../../common/mock",
    "../../../window_scene/screen_session_manager/include",
    "../../../window_scene/screen_session_manager_client/include",
  ]
}

ohos_static_library("dms_systemtest_common") {
  visibility = [ ":*" ]
  testonly = true

  sources = [ "display_test_utils.cpp" ]

  public_configs = [
    ":dms_systemtest_common_public_config",
    "../../../resources/config/build:coverage_flags",
    "../../../resources/config/build:testcase_flags",
  ]

  public_deps = [
    "${window_base_path}/dm:libdm_static",
    "${window_base_path}/utils:libwmutil",
    "${window_base_path}/utils:libwmutil_base",
    "${window_base_path}/window_scene/interfaces/innerkits:libwsutils",
    "${window_base_path}/wm:libwm",
    "../../../dmserver:libdms",
    "../../common/utils:libtestutil",
  ]

  external_deps = test_external_deps
  external_deps += [
    "access_token:libaccesstoken_sdk",
    "access_token:libnativetoken",
    "access_token:libtoken_setproc",
    "graphic_2d:librender_service_client",
    "graphic_surface:surface",
    "input:libmmi-client",
    "ipc:ipc_single",
  ]
  subsystem_name = "window"
  part_name = "window_manager"
}
## Build dms_systemtest_common.a }}}
