# Copyright (c) 2021-2023 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("../../../../windowmanager_aafwk.gni")

config("window_manager_napi_config") {
  visibility = [ ":*" ]

  include_dirs = [
    "window_napi",
    "window_manager_napi",
    "../../../innerkits/wm",
    "../../../innerkits/dm",
    "../../../../wm/include",
    "../../../../utils/include",
  ]
}

config("window_native_kit_config") {
  visibility = [ ":*" ]

  include_dirs = [
    "window_napi",
    "../../../innerkits/wm",
    "../../../innerkits/dm",
    "../../../../utils/include",
    "../../../../wm/include",
    "../../../../wmserver/include",
  ]
}

config("window_native_kit_public_config") {
  visibility = [ ":*" ]

  include_dirs = [ "window_napi" ]
}

ohos_shared_library("window_native_kit") {
  branch_protector_ret = "pac_ret"
  sanitize = {
    cfi = true
    cfi_cross_dso = true
    cfi_vcall_icall_only = true
    debug = false
  }
  sources = [
    "window_napi/js_extension_window_config.cpp",
    "window_napi/js_transition_controller.cpp",
    "window_napi/js_window.cpp",
    "window_napi/js_window_listener.cpp",
    "window_napi/js_window_register_manager.cpp",
    "window_napi/js_window_utils.cpp",
  ]

  public_configs = [ ":window_native_kit_public_config" ]

  configs = [
    ":window_native_kit_config",
    "../../../../resources/config/build:coverage_flags",
  ]

  deps = [
    "../../../../utils:libwmutil",
    "../../../../utils:libwmutil_base",
    "../../../../wm:libwm",
  ]

  external_deps = [
    "ability_runtime:ability_manager",
    "ability_runtime:dialog_request_info",
    "ability_runtime:extensionkit_native",
    "ability_runtime:runtime",
    "access_token:libaccesstoken_sdk",
    "ace_engine:ace_uicontent",
    "bundle_framework:appexecfwk_base",
    "c_utils:utils",
    "eventhandler:libeventhandler",
    "hilog:libhilog",
    "hitrace:hitrace_meter",
    "image_framework:image",
    "image_framework:image_native",
    "ipc:ipc_napi",
    "ipc:ipc_single",
    "napi:ace_napi",
  ]

  innerapi_tags = [ "platformsdk" ]
  part_name = "window_manager"
  subsystem_name = "window"

  defines = []
  if (build_variant == "user") {
    defines += [ "IS_RELEASE_VERSION" ]
  }
}

ohos_shared_library("window_napi") {
  branch_protector_ret = "pac_ret"
  sanitize = {
    cfi = true
    cfi_cross_dso = true
    cfi_vcall_icall_only = true
    debug = false
  }
  sources = [
    "window_manager_napi/js_window_manager.cpp",
    "window_manager_napi/window_manager_module.cpp",
  ]

  configs = [
    ":window_manager_napi_config",
    "../../../../resources/config/build:coverage_flags",
  ]

  deps = [
    ":window_native_kit",
    "../../../../dm:libdm",
    "../../../../utils:libwmutil",
    "../../../../utils:libwmutil_base",
    "../../../../wm:libwm",
  ]

  external_deps = [
    "ability_runtime:ability_context_native",
    "ability_runtime:abilitykit_native",
    "ability_runtime:runtime",
    "c_utils:utils",
    "common_event_service:cesfwk_innerkits",
    "graphic_2d:librender_service_client",
    "hilog:libhilog",
    "hitrace:hitrace_meter",
    "image_framework:image",
    "napi:ace_napi",
  ]

  relative_install_dir = "module"

  part_name = "window_manager"
  subsystem_name = "window"
}

ohos_shared_library("windowstage_kit") {
  branch_protector_ret = "pac_ret"
  sanitize = {
    cfi = true
    cfi_cross_dso = true
    cfi_vcall_icall_only = true
    debug = false
  }
  sources = [ "window_stage_napi/js_window_stage.cpp" ]

  configs = [
    ":window_native_kit_config",
    "../../../../resources/config/build:coverage_flags",
  ]

  include_dirs = [ "window_stage_napi" ]
  deps = [
    ":window_native_kit",
    "../../../../utils:libwmutil",
    "../../../../utils:libwmutil_base",
    "../../../../wm:libwm",
  ]

  external_deps = [
    "ability_runtime:runtime",
    "c_utils:utils",
    "hilog:libhilog",
    "napi:ace_napi",
  ]

  innerapi_tags = [ "platformsdk" ]
  part_name = "window_manager"
  subsystem_name = "window"
}
