# Copyright (c) 2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("../../../../windowmanager_aafwk.gni")

config("screen_runtime_config") {
  visibility = [ ":*" ]

  include_dirs = [ "napi" ]
}

ohos_shared_library("screen_napi") {
  branch_protector_ret = "pac_ret"
  sanitize = {
    cfi = true
    cfi_cross_dso = true
    cfi_vcall_icall_only = true
    debug = false
  }
  sources = [
    "napi/js_screen.cpp",
    "napi/js_screen_listener.cpp",
    "napi/js_screen_manager.cpp",
    "napi/screen_manager_module.cpp",
  ]

  configs = [
    ":screen_runtime_config",
    "../../../../resources/config/build:coverage_flags",
  ]

  deps = [
    "../../../../dm:libdm",
    "../../../../utils:libwmutil",
    "../../../../utils:libwmutil_base",
  ]

  external_deps = [
    "ability_runtime:runtime",
    "c_utils:utils",
    "graphic_2d:librender_service_base",
    "graphic_surface:surface",  # use for SurfaceUtils
    "hilog:libhilog",
    "hitrace:hitrace_meter",
    "hiview:libxpower_event_js",
    "image_framework:image",
    "image_framework:image_native",
    "napi:ace_napi",
  ]

  defines = []
  if (defined(global_parts_info) &&
      defined(global_parts_info.hiviewdfx_hiview)) {
    external_deps += [ "hiview:libxpower_event_js" ]
    defines += [ "XPOWER_EVENT_ENABLE" ]
  }

  relative_install_dir = "module"

  part_name = "window_manager"
  subsystem_name = "window"
}

ohos_shared_library("screen_kit") {
  branch_protector_ret = "pac_ret"
  sanitize = {
    cfi = true
    cfi_cross_dso = true
    cfi_vcall_icall_only = true
    debug = false
  }
  sources = [ "napi/js_screen.cpp" ]

  configs = [
    ":screen_runtime_config",
    "../../../../resources/config/build:coverage_flags",
  ]

  deps = [
    "../../../../dm:libdm",
    "../../../../utils:libwmutil",
    "../../../../utils:libwmutil_base",
  ]

  external_deps = [
    "ability_runtime:runtime",
    "c_utils:utils",
    "graphic_2d:librender_service_base",
    "graphic_surface:surface",  # use for SurfaceUtils
    "hilog:libhilog",
    "hitrace:hitrace_meter",
    "napi:ace_napi",
  ]

  innerapi_tags = [ "platformsdk" ]
  part_name = "window_manager"
  subsystem_name = "window"
}
