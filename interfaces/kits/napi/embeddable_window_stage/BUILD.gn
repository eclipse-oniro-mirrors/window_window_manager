# Copyright (c) 2024 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("//build/ohos/ace/ace.gni")
import("//build/templates/abc/ohos_abc.gni")

es2abc_gen_abc("gen_embeddable_window_stage_abc") {
  src_js = rebase_path("embeddable_window_stage.js")
  dst_file = rebase_path(target_out_dir + "/embeddable_window_stage.abc")
  in_puts = [ "embeddable_window_stage.js" ]
  out_puts = [ target_out_dir + "/embeddable_window_stage.abc" ]
  extra_args = [ "--module" ]
}

gen_js_obj("embeddable_window_stage_js") {
  input = "embeddable_window_stage.js"
  output = target_out_dir + "/embeddable_window_stage.o"
}

gen_js_obj("embeddable_window_stage_abc") {
  input = get_label_info(":gen_embeddable_window_stage_abc", "target_out_dir") +
          "/embeddable_window_stage.abc"
  output = target_out_dir + "/embeddable_window_stage_abc.o"
  dep = ":gen_embeddable_window_stage_abc"
}

ohos_shared_library("embeddablewindowstage") {
  branch_protector_ret = "pac_ret"
  sanitize = {
    cfi = true
    cfi_cross_dso = true
    cfi_vcall_icall_only = true
    debug = false
  }
  sources = [ "embeddable_window_stage_module.cpp" ]

  configs = [ "../../../../resources/config/build:coverage_flags" ]

  deps = [
    ":embeddable_window_stage_abc",
    ":embeddable_window_stage_js",
  ]

  external_deps = [ "napi:ace_napi" ]

  relative_install_dir = "module/application"
  part_name = "window_manager"
  subsystem_name = "window"
}

config("embeddable_window_stage_kit_config") {
  visibility = [ ":*" ]

  include_dirs = [
    "../extension_window",
    "../window_runtime/window_napi",
    "../../../innerkits/wm",
    "../../../../utils/include",
    "../../../../wm/include",
    "../../../../wmserver/include",
  ]
}

config("embeddablewindowstage_kit_public_config") {
  visibility = [ ":*" ]

  include_dirs = [ "../embeddable_window_stage" ]
}

ohos_shared_library("embeddablewindowstage_kit") {
  branch_protector_ret = "pac_ret"
  sanitize = {
    cfi = true
    cfi_cross_dso = true
    cfi_vcall_icall_only = true
    debug = false
  }
  sources = [ "js_embeddable_window_stage.cpp" ]

  configs = [
    ":embeddable_window_stage_kit_config",
    "../../../../resources/config/build:coverage_flags",
  ]

  public_configs = [ ":embeddablewindowstage_kit_public_config" ]
  include_dirs = [ "embeddable_window_stage" ]
  deps = [
    "../../../../utils:libwmutil",
    "../../../../utils:libwmutil_base",
    "../../../../wm:libwm",
    "../extension_window:extensionwindow_napi",
  ]

  external_deps = [
    "ability_runtime:runtime",
    "ace_engine:ace_uicontent",
    "c_utils:utils",
    "hilog:libhilog",
    "napi:ace_napi",
  ]

  innerapi_tags = [ "platformsdk" ]
  part_name = "window_manager"
  subsystem_name = "window"

  defines = []
  if (build_variant == "user") {
    defines += [ "IS_RELEASE_VERSION" ]
  }
}
