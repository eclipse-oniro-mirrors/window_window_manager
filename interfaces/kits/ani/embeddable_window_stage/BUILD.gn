# Copyright (c) 2025-2025 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
#import("//build/ohos/idlize/arkts_idlize.gni")
import("../../../../windowmanager_aafwk.gni")
import("//build/config/components/ets_frontend/ets2abc_config.gni")

config("window_common_config") {
  visibility = [ ":*" ]

  include_dirs = [
    "../common",
    "../../../../../../../arkcompiler/runtime_core/static_core/plugins/ets/runtime/ani",
    "../extension_window",
    "../window_runtime/window_napi",
    "../../../innerkits/wm",
    "../../../innerkits/dm",
    "../../../../utils/include",
    "../../../../wm/include",
    "../../../../wmserver/include",
  ]
}

config("windowstage_ani_public_config") {
  visibility = [ ":*" ]

  include_dirs = [ "include" ]
}

#template("generate_and_build") {
#  forward_variables_from(invoker, "*")
#
#  # input-file
#  #idlize_idl2peer(target_name) {
#  #  input_dir = "//foundation/window/window_manager/interfaces/kits/ani/window_runtime/window_stage_ani/idl/"
#  #  output = "//foundation/window/window_manager/interfaces/kits/ani/window_runtime/window_stage_ani"
#  #  dirmode = "delete"
#  #  default_package = "window"
#  #  mode = "dts2peer"
#  #}
#
#  ohos_source_set("embeddablewindowstageidl_sourceset") {
#    visibility = [ ":*" ]
#    include_dirs = [
#      "../common",
#      "../extension_window",
#      "../window_runtime/window_napi",
#      "../../../innerkits/wm",
#      "../../../innerkits/dm",
#      "../../../../utils/include",
#      "../../../../wm/include",
#      "../../../../wmserver/include",
#      "./include",
#      "./generated/"
#    ]
#
#    external_deps = [
#      "ability_runtime:ability_manager",
#      "ability_runtime:runtime",
#      "c_utils:utils",
#      "hilog:libhilog",
#      "napi:ace_napi",
#    ]
#    sources = [ "./src/ani_embeddable_window_stage.cpp",
#                "./src/ani_extension_window.cpp" ]
#    subsystem_name = "window"
#    part_name = "window_manager"
#  }
#
#  idlize_shared_library(target_name) {
#    generated = "//foundation/window/window_manager/interfaces/kits/ani/embeddable_window_stage/generated"
#    classpath_prefix = "@ohos/window/WINDOWNativeModule/"
#    relative_install_dir = "module/application"
#    module_install_dir = "module/application"
#    deps = [
#      "../../../../utils:libwmutil",
#      "../../../../utils:libwmutil_base",
#      "../../../../wm:libwm",
#      ":embeddablewindowstageidl_sourceset",
#    ]
#
#    configs = [
#      ":window_common_config",
#      ":windowstage_ani_public_config",
#      "../../../../resources/config/build:coverage_flags",
#    ]
#
#    public_configs = [ ":windowstage_ani_public_config" ]
#
#    external_deps = [
#      "ability_runtime:ability_manager",
#      "ability_runtime:runtime",
#      "c_utils:utils",
#      "hilog:libhilog",
#    ]
#    subsystem_name = "window"
#    part_name = "window_manager"
#    version_script = "window.map"
#  }
#}
#
#generate_and_build("embeddablewindowstage_idl") {
#  sanitize = {
#    cfi = true
#    cfi_cross_dso = true
#    cfi_vcall_icall_only = true
#    debug = false
#  }
#}

# lib generate
ohos_shared_library("embeddablewindowstageani_kit") {
  branch_protector_ret = "pac_ret"
  sanitize = {
    cfi = true
    cfi_cross_dso = true
    cfi_vcall_icall_only = true
    debug = false
  }
  sources = [
    "src/ani_embeddable_window_stage.cpp",
    "src/ani_extension_window.cpp",
  ]

  configs = [
    ":window_common_config",
    ":windowstage_ani_public_config",
    "../../../../resources/config/build:coverage_flags",
  ]

  public_configs = [ ":windowstage_ani_public_config" ]

  deps = [
    "../../../../utils:libwmutil",
    "../../../../utils:libwmutil_base",
    "../../../../wm:libwm",
  ]

  external_deps = [
    "ability_runtime:ability_manager",
    "ability_runtime:runtime",
    "c_utils:utils",
    "eventhandler:libeventhandler",
    "hilog:libhilog",
    "hitrace:hitrace_meter",
    "napi:ace_napi",
  ]

  innerapi_tags = [ "platformsdk" ]
  part_name = "window_manager"
  subsystem_name = "window"
}

# abc generate
generate_static_abc("extension_window_abc_ani") {
  arktsconfig = "./uiExtension.json"
  dst_file = "$target_out_dir/extension_window_ani.abc"
  out_puts = [ "$target_out_dir/extension_window_ani.abc" ]
  timeout_limit = "120"
  extra_visibility = [ ":*" ]
}

generate_static_abc("extension_window_host_abc_ani") {
  arktsconfig = "./uiExtensionHost.json"
  dst_file = "$target_out_dir/extension_window_host_ani.abc"
  out_puts = [ "$target_out_dir/extension_window_host_ani.abc" ]
  in_puts = ["./uiExtensionHost.json",
             "./sts/uiExtensionHost.ets",
             "./sts/uiExtensionHost_entry.ets" ]
  timeout_limit = "120"
  extra_visibility = [ ":*" ]
}

group("embeddable_window_stage_ani") {
  deps = [ ":embeddablewindowstageani_kit",
           ":extension_window_host_abc_ani",
           ":extension_window_abc_ani" ]
}
