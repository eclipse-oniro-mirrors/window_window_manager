# Copyright (c) 2025-2025 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("../../../../windowmanager_aafwk.gni")

config("window_common_config") {
  visibility = [ ":*" ]

  include_dirs = [
    "../common",
    "../extension_window",
    "../window_runtime/window_napi",
    "../../../innerkits/wm",
    "../../../innerkits/dm",
    "../../../../utils/include",
    "../../../../wm/include",
    "../../../../wmserver/include",
  ]
}

config("windowstage_ani_public_config") {
  visibility = [ ":*" ]

  include_dirs = [
    "include",
    "../window_runtime/window_stage_ani/include",
  ]
}

# lib generate
ohos_shared_library("embeddablewindowstageani_kit") {
  branch_protector_ret = "pac_ret"
  sanitize = {
    cfi = true
    cfi_cross_dso = true
    cfi_vcall_icall_only = true
    debug = false
  }
  sources = [
    "src/ani_embeddable_window_stage.cpp",
    "src/ani_extension_window.cpp",
    "src/ani_extension_window_listener.cpp",
    "src/ani_extension_window_register_manager.cpp",
  ]

  configs = [
    ":window_common_config",
    ":windowstage_ani_public_config",
    "../../../../resources/config/build:coverage_flags",
  ]

  public_configs = [ ":windowstage_ani_public_config" ]

  deps = [
    "../../../../utils:libwmutil",
    "../../../../utils:libwmutil_base",
    "../../../../wm:libwm",
    "../window_runtime:windowstageani_kit",
    "../../../../interfaces/kits/napi/window_runtime:window_native_kit",
  ]

  external_deps = [
    "ability_runtime:ability_manager",
    "ability_runtime:runtime",
    "c_utils:utils",
    "eventhandler:libeventhandler",
    "hilog:libhilog",
    "hitrace:hitrace_meter",
    "image_framework:image",
    "image_framework:image_ani",
    "ipc:ipc_single",
    "napi:ace_napi",
    "runtime_core:ani",
  ]

  innerapi_tags = [ "platformsdk" ]
  part_name = "window_manager"
  subsystem_name = "window"
}

group("embeddable_window_stage_ani") {
  deps = [
    ":embeddablewindowstageani_kit",
    "ets:extension_window_abc_ani_etc",
    "ets:extension_window_host_abc_ani_etc",
  ]
}
